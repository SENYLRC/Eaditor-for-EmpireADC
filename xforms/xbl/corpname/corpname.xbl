<!-- 	author: Ethan Gruber, American Numismatic Society 
	last modified: June, 2011
	function: EAD corpname component; user taps into VIAF APIs or local vocabulary for personal names
-->
<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:xbl="http://www.w3.org/ns/xbl" xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:ead="urn:isbn:1-931666-22-9" xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" xmlns:eaditor="https://github.com/ewg118/eaditor">

	<xbl:binding id="eaditor-corpname" element="eaditor|corpname">
		<xbl:template>
			<xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
				<xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
				<xforms:group xxbl:scope="inner">
					<xforms:var name="binding" as="node()?">
						<xxforms:sequence select="." xxbl:scope="outer"/>
					</xforms:var>
					<xforms:var name="display_path">../../../</xforms:var>
					
					<xforms:action ev:event="xforms-enabled" ev:target="#observer">
						<xforms:setvalue ref="instance('interface-type')">viaf</xforms:setvalue>
					</xforms:action>
					<xforms:group ref=".[string($binding)]">
						<div>
							<xforms:output ref="$binding">
								<xforms:label>Corporate Name</xforms:label>
							</xforms:output>
							<!--<xforms:group ref=".[string($binding/@authfilenumber)]">
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<img src="/apps/eaditor/xforms/images/external.png"/>
									</xforms:label>
									<xforms:load ev:event="DOMActivate" show="new" ref="concat('http://viaf.org/viaf/', $binding/@authfilenumber)"/>
								</xforms:trigger>
							</xforms:group>-->							
							<xforms:trigger appearance="minimal">
								<xforms:action ev:event="DOMActivate">
									<xforms:setvalue ref="instance('suggest-query')"/>
									<xforms:setvalue ref="instance('search-query')"/>
									<xforms:delete nodeset="$binding"/>
								</xforms:action>
								<xforms:label>
									<img src="/apps/eaditor/xforms/images/remove.gif"/>
								</xforms:label>
							</xforms:trigger>
							<eaditor:attributes ref="$binding"/>
						</div>
					</xforms:group>
					<xforms:group ref=".[not(string($binding))]">
						<div style="display:table;width:100%">
							<h4>Corporate Name</h4>							
							<xforms:trigger appearance="minimal">
								<xforms:delete ev:event="DOMActivate" nodeset="."/>
								<xforms:label>
									<img src="{$display_path}images/remove.gif"/>
								</xforms:label>
							</xforms:trigger>	
							<eaditor:attributes ref="$binding"/>							
							<div>
								<radiogroup>
									<xforms:select1 ref="instance('interface-type')" appearance="full">
										<xforms:label>Interface Type</xforms:label>
										<xforms:item>
											<xforms:label>VIAF</xforms:label>
											<xforms:value>viaf</xforms:value>
										</xforms:item>
										<xforms:item>
											<xforms:label>Local Vocabulary</xforms:label>
											<xforms:value>local</xforms:value>
										</xforms:item>
										<xforms:action ev:event="xforms-value-changed">
											<xforms:action if=". = 'viaf'">
												<!-- remove temporary values, applicable when switching back to corpnames from local -->
												<xforms:delete context="instance('rss')/*"/>
												<xforms:setvalue ref="instance('search-query')" value="''"/>
												
												<!-- create attributes, clear $binding text when applicable -->
												<xforms:setvalue ref="$binding" if="not($binding/@authfilenumber)"/>
												<xforms:insert if="not($binding/@source)" context="$binding" origin="xxforms:attribute('source', 'viaf')"/>
												<xforms:insert if="not($binding/@authfilenumber)" context="$binding" origin="xxforms:attribute('authfilenumber', '')"/>
												
												<!-- pre-populate the select list -->
												<xforms:toggle case="viaf-search"/>
											</xforms:action>
											<xforms:action if=". = 'local'">
												<!-- clear temp -->
												<xforms:setvalue ref="instance('temp')"/>
												<xforms:setvalue ref="instance('temp')/@href"/>	
												<!-- remove attributes -->
												<xforms:delete if="$binding/@authfilenumber" context="$binding/@authfilenumber"/>
												<xforms:delete if="$binding/@source" context="$binding/@source"/>
												<xforms:action if="not(string(instance('config')/url))">
													<xforms:insert context="instance('control-instance')" nodeset="collection-name" position="after"
														origin="xxforms:call-xpl('oxf:/apps/eaditor/xpl/get-authentication.xpl', 'dump', instance('dump'), 'data')"/>
													<xforms:send submission="load-collections"/>
												</xforms:action>
												<xforms:toggle case="local-autosuggest"/>
											</xforms:action>
										</xforms:action>
									</xforms:select1>
								</radiogroup>
							</div>
							
							<xforms:switch>
								<xforms:case id="default"/>
								<xforms:case id="viaf-search">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Search</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:delete context="instance('rss')/*"/>
												<xforms:send submission="query-viaf"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
									</div>
									
									<xforms:group ref=".[count(instance('rss')//item) &gt; 0]">
										<xforms:output ref="instance('search-results')"/>
										<br/>
										<xforms:select1 ref="instance('temp')/@href" appearance="compact" id="select-list">
											<xforms:label>Name</xforms:label>
											<xforms:itemset nodeset="instance('rss')//item">
												<xforms:label ref="title"/>
												<xforms:value ref="link"/>
											</xforms:itemset>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding/@authfilenumber" value="substring-after(instance('temp')/@href, 'http://viaf.org/viaf/')"/>
												<xforms:setvalue ref="$binding" value="instance('rss')//item[link = instance('temp')/@href]/title"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:case>
								<xforms:case id="local-autosuggest">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Term</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:send submission="suggest-term"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
										<xforms:trigger>
											<xforms:label>Add New</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding" value="instance('search-query')"/>
											</xforms:action>
										</xforms:trigger>
									</div>
									<xforms:group ref=".[count(instance('solr-response')/lst[@name='terms']//int) &gt; 0]">
										<xforms:select1 ref="instance('temp')" appearance="compact" size="10">
											<xforms:label>Location</xforms:label>
											<xforms:itemset nodeset="instance('solr-response')/lst[@name='terms']//int">
												<xforms:label ref="@name"/>
												<xforms:value ref="@name"/>
											</xforms:itemset>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding" value="instance('temp')"/>
											</xforms:action>
										</xforms:trigger>										
									</xforms:group>
									<xforms:group ref=".[string-length(instance('control-instance')/local-message) &gt; 0]">
										<p>
											<xforms:output ref="instance('control-instance')/local-message"/>
										</p>
									</xforms:group>
								</xforms:case>
							</xforms:switch>
						</div>
					</xforms:group>

					<!--<fr:xforms-inspector id="orbeon-xforms-inspector"/>-->

					<!-- ********************************************************************** -->
					<!-- ***********************  DIALOG INTERNAL MODEL *********************** -->
					<xforms:model id="corpname-authorities-model" xmlns:xi="http://www.w3.org/2001/XInclude">
						<xforms:instance id="exist-config">
							<xi:include href="../../../exist-config.xml"/>
						</xforms:instance>
						<xforms:instance id="config">
							<config xmlns=""/>
						</xforms:instance>

						<xforms:instance id="temp">
							<temp href=""/>
						</xforms:instance>


						<!-- total results -->
						<xforms:instance id="search-results">
							<results/>
						</xforms:instance>
						
						<!-- authentication -->
						<xforms:instance id="collections-list" xxforms:exclude-result-prefixes="#all">
							<collections xmlns=""/>
						</xforms:instance>
						
						<xforms:instance id="dump">
							<dump xmlns=""/>
						</xforms:instance>						
						
						<xforms:instance id="control-instance">
							<control xmlns="">
								<collection-name/>
								<local-message/>
							</control>
						</xforms:instance>

						<!-- Instances containing the query string -->						
						<xforms:instance id="search-query">
							<query/>
						</xforms:instance>

						<!-- corpnames specific instances -->
						<xforms:instance id="viaf-temp">
							<rss/>
						</xforms:instance>
						<xforms:instance id="rss">
							<rss/>
						</xforms:instance>

						<!-- local vocabulary -->						
						<xforms:instance id="solr-response">
							<response xmlns=""/>
						</xforms:instance>
						

						<!-- corpname type radio button -->
						<xforms:instance id="interface-type">
							<interface/>
						</xforms:instance>

						<!-- search for matching keywords -->
						<xforms:submission id="query-viaf" serialization="none" method="get"
							action="http://viaf.org/viaf/search?query=local.corporateNames+all+%22{instance('search-query')}%22&amp;maximumRecords=100&amp;httpAccept=application/rss%2bxml"
							instance="rss" replace="instance">
							<xforms:action ev:event="xforms-submit-done">
								<xforms:message if="number(instance('rss')//opensearch:totalResults) = 0" level="modal">No results found for query.</xforms:message>
								<xforms:setvalue if="number(instance('rss')//opensearch:totalResults) != 0" ref="instance('search-results')"
									value="concat('Displaying first 100 of ', instance('rss')//opensearch:totalResults, ' result(s).')"/>
							</xforms:action>
						</xforms:submission>
						
						<xforms:submission id="load-collections" serialization="none" method="get" action="{instance('exist-config')/url}eaditor/collections-list.xml" replace="instance" instance="collections-list"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
							<!-- if the config loads successfully, set the collection names based on authentication -->
							<xforms:action ev:event="xforms-submit-done">
								<!-- set default if security is false -->
								<xforms:action if="not(string(instance('control-instance')/request-security/role))">
									<xforms:setvalue ref="instance('control-instance')/collection-name">default</xforms:setvalue>
								</xforms:action>
								<!-- if there is a security role, set the collection-name value if it is in the list, otherwise set new collection name -->
								<xforms:action if="string(instance('control-instance')/request-security/role)">
									<xforms:action if="string(instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name)">
										<xforms:setvalue ref="instance('control-instance')/collection-name"
											value="instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name"/>
									</xforms:action>
								</xforms:action>
								<xforms:send submission="load-config"/>
							</xforms:action>
							<!-- if the config has not been created (given that the URL in exist-url.xml is correct), create it -->
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to load EADitor collections list.</xforms:message>
						</xforms:submission>

						<xforms:submission id="load-config" serialization="none" method="get" action="{instance('exist-config')/url}eaditor/{instance('control-instance')/collection-name}/config.xml" replace="instance" instance="config"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
							<xforms:message ev:event="xforms-submit-error" level="modal">Error Loading Config.</xforms:message>
						</xforms:submission>

						<xforms:submission id="suggest-term" serialization="none" method="get"
							action="{instance('config')/solr_published}terms?terms.fl=corpname_facet&amp;terms.limit=25&amp;terms.sort=index&amp;terms.regex.flag=case_insensitive&amp;terms.regex=.*{instance('search-query')}.*"
							instance="solr-response" replace="instance">
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to query Solr.</xforms:message>
							<xforms:action ev:event="xforms-submit-done">
								<!-- set or clear message based on number of results found -->
								<xforms:setvalue ref="instance('control-instance')/local-message" if="count(instance('solr-response')/lst[@name='terms']//int) = 0">No matching terms
									found.</xforms:setvalue>
								<xforms:setvalue ref="instance('control-instance')/local-message" if="count(instance('solr-response')/lst[@name='terms']//int) &gt; 0"/>
							</xforms:action>
						</xforms:submission>
					</xforms:model>
				</xforms:group>
			</xforms:group>
		</xbl:template>
	</xbl:binding>

</xbl:xbl>
